# Config for sway
#
# Read `man 5 sway` for a complete reference.

#*****************************************************************

include /etc/sway/config.d/*

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
    set $menu "rofi -combi-modi window,drun,ssh,run -show combi -show-icons"
    include /etc/sway/config-vars.d/*

# Set terminal emulator
    set $term alacritty

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
    set $mod Mod4

# reload the configuration file
    bindsym $mod+Shift+c reload

# Set wallpaper:
    #exec swaybg -i ~/Pictures/wallpapers/wp1.jpg
    #exec_always --no-startup-id ~/.azotebg
    output * bg ~/Pictures/wallpaper_gruvbox.jpeg fill

#start always
    exec_always --no-startup-id start xdg-desktop-portal-wlr
    exec_always --no-startup-id start xdg-desktop-portal
    exec_always --no-startup-id nm-applet
    exec_always --no-startup-id dunst
    exec_always --no-startup-id autotiling-rs
    exec_always brightnessctl set 50%
    exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
    exec --no-startup-id systemctl --user import-environment DISPLY WAYLAND_DISPLAY SWAYSOCK
    exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK 
    exec --no-startup-id ~/scripts/repairportal
   
 exec gnome-keyring-daemon
    exec_always {
    gsettings set $gnome-schema gtk-theme Gruvbox-Material-Dark
    gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'
}

bar {
    swaybar_command waybar
}

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
    font pango: Martian Mono 12


#█▄▄ █▀█ █▀█ █▀▄ █▀▀ █▀█
#█▄█ █▄█ █▀▄ █▄▀ ██▄ █▀▄
                
# Configure border style <normal|1pixel|pixel xx|none|pixel>
    default_border pixel 2.5
    default_floating_border normal

# Hide borders
    hide_edge_borders none

# change borders
    bindsym $mod+u border none
    bindsym $mod+y border pixel 2
    #bindsym $mod+n border normal
    
    client.focused "81aaa1" "81aaa1" "ACA98A"
    client.unfocused "5a524c" "222222" "ddc7a1"
    client.urgent "C98D8A" "282828" "9EC3C4"
################################################################################################

# █▄▀ █▀▀ █▄█   █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# █░█ ██▄ ░█░   █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    # Hide Waybar and launch application launcher
    bindsym $mod+d exec $menu


    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec sway exit

    # Emojis
    bindsym Ctrl+Alt+e exec emote
#dunst
    bindsym $mod+o exec notify-send -t 3500 "$(date '+%a %b %e %r')"
    bindsym $mod+i exec notify-send "$(curl wttr.in/Cosenza?format=3)"

#poweroff, reboot shortcuts
    bindsym $mod+Shift+End exec poweroff
    bindsym $mod+Shift+Home exec reboot

# █▀▄▀█ █▀█ █░█ █ █▄░█ █▀▀   ▄▀█ █▀█ █▀█ █░█ █▄░█ █▀▄
# █░▀░█ █▄█ ▀▄▀ █ █░▀█ █▄█   █▀█ █▀▄ █▄█ █▄█ █░▀█ █▄▀

# Use Mouse+$mod to drag floating windows
    floating_modifier $mod

# change focus
    bindsym $mod+j focus up
    bindsym $mod+k focus down
    bindsym $mod+l focus right
    bindsym $mod+h focus left

# alternatively, you can use the cursor keys:
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

# move focused window
    bindsym $mod+Shift+j move up
    bindsym $mod+Shift+k move down
    bindsym $mod+Shift+l move right
    bindsym $mod+Shift+h move left

# alternatively, you can use the cursor keys:
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# █░░ ▄▀█ █▄█ █▀█ █░█ ▀█▀   █▀ ▀█▀ █░█ █▀▀ █▀▀
# █▄▄ █▀█ ░█░ █▄█ █▄█ ░█░   ▄█ ░█░ █▄█ █▀░ █▀░

    # focus_follows_mouse no

    gaps {
      inner 3
      outer 1
    }

    # set default desktop layout (default is tiling)
    # workspace_layout tabbed <stacking|tabbed>

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

# Switch the current container between different layout styles
    #bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

 # Make the current focus fullscreen
    bindsym $mod+f fullscreen

 # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

 # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

 # Move focus to the parent container
    bindsym $mod+a focus parent

# move the ow to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show          

# █░█░█ █▀█ █▀█ █▄▀ █▀ █▀█ ▄▀█ █▀▀ █▀▀ █▀
# ▀▄▀▄▀ █▄█ █▀▄ █░█ ▄█ █▀▀ █▀█ █▄▄ ██▄ ▄█

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
    set $ws1 1
    set $ws2 2
    set $ws3 3
    set $ws4 4
    set $ws5 5
    set $ws6 6
    set $ws7 7
    set $ws8 8

# switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8

# Move to workspace with focused container
    bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

#navigate workspaces next / previous
    bindsym $mod+Ctrl+Right workspace next
    bindsym $mod+Ctrl+Left workspace prev

# workspace back and forth (with/without active container)
    workspace_auto_back_and_forth yes
    bindsym $mod+Tab workspace back_and_forth
    bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# Open applications on specific workspaces
# Assign workspace
    assign [class="VirtualBox Machine"] workspace 6
    
    workspace $ws1 output DP-1
    workspace $ws2 output HDMI-A-1
    workspace $ws3 output eDP-1

# switch to workspace with urgent window automatically
    for_window [urgent=latest] focus

# █▀█ █▀▀ █▀ █ ▀█ █ █▄░█ █▀▀   █▀▀ █▀█ █▄░█ ▀█▀ ▄▀█ █ █▄░█ █▀▀ █▀█ █▀
# █▀▄ ██▄ ▄█ █ █▄ █ █░▀█ █▄█   █▄▄ █▄█ █░▀█ ░█░ █▀█ █ █░▀█ ██▄ █▀▄ ▄█ (you can also use the mouse for that)

    bindsym $mod+r mode "resize"
    mode "resize" {
            # These bindings trigger as soon as you enter the resize mode
            # Pressing left will shrink the window’s width.
            # Pressing right will grow the window’s width.
            # Pressing up will shrink the window’s height.
            # Pressing down will grow the window’s height.
            bindsym j resize grow height 5 px or 5 ppt
            bindsym k resize shrink height 5 px or 5 ppt
            bindsym l resize grow width 5 px or 5 ppt
            bindsym h resize shrink width 5 px or 5 ppt

            # same bindings, but for the arrow keys
            bindsym Left resize shrink width 10 px or 10 ppt
            bindsym Down resize grow height 10 px or 10 ppt
            bindsym Up resize shrink height 10 px or 10 ppt
            bindsym Right resize grow width 10 px or 10 ppt

            # exit resize mode: Enter or Escape
            bindsym Return mode "default"
            bindsym Escape mode "default"
    }

# █░░ █▀█ █▀▀ █▄▀
# █▄▄ █▄█ █▄▄ █░█

bindsym $mod+0 exec $lock_path


#MONITOR SETUP

output DP-1 pos 0 0
output HDMI-A-1 pos 1920 0
output eDP-1 pos 3840 0
output HDMI-A-1 mode 1920x1080@99.999Hz

# █▀▄▀█ █▀▀ █▀▄ █ ▄▀█   █▄▀ █▀▀ █▄█ █▀
# █░▀░█ ██▄ █▄▀ █ █▀█   █░█ ██▄ ░█░ ▄█


# Volume

    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%    
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%    
    bindsym --locked XF86AudioMute exec "pactl set-sink-mute @DEFAULT_SINK@ toggle"

# Player

    bindsym XF86AudioPlay exec mpc toggle
    bindsym XF86AudioStop exec mpc stop
    bindsym XF86AudioNext exec mpc next
    bindsym XF86AudioPrev exec mpc prev

# Backlight

    bindsym XF86MonBrightnessUp exec brightnessctl -c backlight set +5%
    bindsym XF86MonBrightnessDown exec brightnessctl -c backlight set 5%-

# █ █▄░█ █▀█ █░█ ▀█▀   █▀▀ █▀█ █▄░█ █▀▀ █ █▀▀
# █ █░▀█ █▀▀ █▄█ ░█░   █▄▄ █▄█ █░▀█ █▀░ █ █▄█

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input type:touchpad {
    tap enabled
    scroll_method two_finger edge
#    pointer_accel 0.2
    drag enabled
#    dwt disabled
}


input "1:1:AT_Translated_Set_2_keyboard" {
    xkb_layout it,it(winkeys)
    xkb_options "grp:lalt_lshift_toggle"
}

# Idle configuration
# exec swayidle -w \
#  	timeout 250 'swaylock -f -c 000000' \
#  	timeout 400 'swaymsg "output * dpms off"' \
#    resume 'swaymsg "output * dpms on"' \
#  	before-sleep 'swaylock -f -c 000000'

# █▀▀ █░█ █▀ ▀█▀ █▀█ █▀▄▀█   █▄▄ █ █▄░█ █▀▄
# █▄▄ █▄█ ▄█ ░█░ █▄█ █░▀░█   █▄█ █ █░▀█ █▄▀

#Screenshot
##capture selected area to clipboard 
#    bindsym $mod+s exec grim -g "$(slurp)" - | wl-copy && notify-send "Screenshot copied"

##capture all screen to clipboard and saves
    bindsym $mod+Print exec grim && notify-send "Screenshot saved"

##capture selected area and saves
#    bindsym $mod+Shift+Print exec IMG=~/Pictures/screenshot_$(date +%Y%m%d_%H%M%S).png && grim -g "$(slurp)" $IMG && wl-copy < $IMG && notify-send "Screenshot saved"

#Screenrecord
#   set $screenrecord wf-recorder -g "$(slurp)" --audio=alsa_output.pci-0000_08_00.6.analog-stereo.monitor -f ~/Videos/record/mov-$(date +"%Y-%m-%d--%H-%M-%S.mp4")
#    bindsym $mod+v exec $screenrecord
#    bindsym $mod+BackSpace exec killall -s SIGINT wf-recorder; exec killall ffmpeg && notify-send "Recording Saved"

#Audiorecord
#    set $audiorecord ffmpeg -f pulse -i alsa_output.pci-0000_00_1b.0.analog-stereo.monitor -ac 2 ~/Audio/aud-$(date +%Y%m%d_%H%M%S).mp3
#    bindsym $mod+a exec $audiorecord

assign [class="Spotify"] workspace number 3
assign [app_id="firefox"] workspace number 2
for_window [app_id="flameshot"] floating enable, fullscreen disable, move absolute position 0 0, border pixel 0
